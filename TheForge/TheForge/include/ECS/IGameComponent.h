#ifndef IGAMECOMPONENT_H
#define IGAMECOMPONENT_H

// Allows use to c++ managed pointers
#include <memory>

enum GameComponentType
{
	MESH = 0, 
	COLLIDER, 
	RIGID_BODY, 
	AI, 
	STATS, 
	MOVEMENT_CONTROLLER,
	AUDIO_CONTROLLER
};

class IGameComponent 
{
	public:
		virtual bool Init() = 0;
		virtual void Destroy() = 0;
		// Get this components type
		GameComponentType GetComponentType();
		// Get this components GameID
		int GetGameID();

	protected:
		// GameID should be a unique int val (generated by time)
		int gameID;
		GameComponentType type;
};

typedef std::shared_ptr<IGameComponent> IGameComponentPtr;

#endif